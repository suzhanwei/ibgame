package getui_manage

import(
	"encoding/json"
	"bytes"
	"net/http"
	"ibgame/logs"
)
// Generated by curl-to-Go: https://mholt.github.io/curl-to-go

type Single struct {
	Message      MessageItem      `json:"message"`
	Notification NotificationItem `json:"notification"`
	Cid          string           `json:"cid"`
	Requestid    string           `json:"requestid"`
}

type MessageItem struct {
	Appkey            string `json:"appkey"`
	IsOffline         bool   `json:"is_offline"`
	OfflineExpireTime int    `json:"offline_expire_time"`
	Msgtype           string `json:"msgtype"`
}
type NotificationItem struct {
	Style               StyleItem  `json:"style"`
	TransmissionType    bool   `json:"transmission_type"`
	TransmissionContent string `json:"transmission_content"`
}

type StyleItem struct {
	Type  int    `json:"type"`
	Text  string `json:"text"`
	Title string `json:"title"`
}


func Push_singel(param Single)(ret ,err error){
	url:="https://restapi.getui.com/v1/9sQ07BI8xW7VeKElV9W9p6/push_single"
    payloadBytes, err := json.Marshal(param)
if err != nil {
	logs.Error.Println("json err",err)
}

body := bytes.NewReader(payloadBytes)

req, err := http.NewRequest("POST", url, body)
if err != nil {
	logs.Error.Println("http req err",err)
}
req.Header.Set("Content-Type", "application/json")
req.Header.Set("Authtoken", "87297be59b7cd6eef61928785118300f3d1b46e964c7ccbb1ed8a6ace863813f")
resp, err := http.DefaultClient.Do(req)
if err != nil {
	logs.Error.Println("http resp",err)
}
defer resp.Body.Close()
return
}